# 18. Separate string into comma-separated values
X = "India.is.my.country"
new_X = X.replace('.', ',')
print(new_X)

# 19. Remove a given character from the string
Y = "M.A.N.I.P.A.L"
remove_char = input("Enter character to remove: ").upper()
new_Y = '.'.join(char for char in Y.split('.') if char != remove_char)
print(new_Y)

# 20. Remove the dots from the string
Y = "M.A.N.I.P.A.L"
new_Y = Y.replace('.', '')
print(new_Y)

# 21. Sort strings alphabetically
n = int(input("Enter number of strings: "))
strings = [input(f"Enter string {i+1}: ") for i in range(n)]
sorted_strings = sorted(strings)
print(sorted_strings)

# 22. Reverse a given string
string = input("Enter a string: ")
print(string[::-1])

# 23. Check if string contains only digits
string = input("Enter a string: ")
print("The string contains only digits.") if string.isdigit() else print("The string contains characters other than digits.")

# 24. Number of vowels in the string
string = input("Enter a string: ")
vowel_count = sum(1 for char in string.lower() if char in 'aeiou')
print(f"{vowel_count} vowels")

# 25. Inverted Pyramid of Numbers
rows = int(input("Enter rows: "))
for i in range(1, rows + 1):
    print(' ' * (i - 1) + f"{i} " * (rows - i + 1))

# 26. Half Pyramid Pattern of Numbers
rows = int(input("Enter rows: "))
for i in range(1, rows + 1):
    print(' ' * (rows - i) * 2 + ' '.join(str(j) for j in range(1, i + 1)))

# 27. Inverted Half Pyramid Number Pattern
rows = int(input("Enter rows: "))
for i in range(rows, 0, -1):
    print(' '.join(str(j) for j in range(i)))

# 28. Unique Pyramid Pattern of Digits
rows = int(input("Enter rows: "))
for i in range(1, rows + 1):
    print(' '.join(str(j) for j in range(1, i + 1)) + ' '.join(str(j) for j in range(i - 1, 0, -1)))

# 29. Pyramid of Horizontal Tables
rows = int(input("Enter rows: "))
for i in range(rows):
    print(' '.join(str(i * j) for j in range(i + 1)))

# 30. Equilateral Triangle with Stars
rows = int(input("Enter rows: "))
for i in range(1, rows + 1):
    print(' ' * (rows - i) + '* ' * i)
